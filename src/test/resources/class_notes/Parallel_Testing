Today is 1/3/2020

	Parallel testing
	How to create regression suit
	Passing browser type from terminal: mvn test -browser=firefox
	Summary of cucumber framework

#######################################

Thread - it's a path of execution.

mvn verify -Dbrowser=firefox - to run with firefox

mvn verify -Dbrowser=chrome - to run with chrome

if report is failing, tun with test goal

mvn test -Dbrowser=chrome - to run with chrome


to read browser parameter in your project, use System.getProperty("browser")

You can pass any parameters from command line.

package com.vytrack.runners;

import io.cucumber.junit.Cucumber;
import io.cucumber.junit.CucumberOptions;
import org.junit.runner.RunWith;

@RunWith(Cucumber.class)
@CucumberOptions(
        features = "@target/rerun.txt",
        glue = "com/vytrack/step_definitions",
        plugin = {
                "html:target/rerun-default-cucumber-reports",
        }
)
public class FailedRunner {
}

Failed runner shouldn't generate json report




mvn test -P Regression - to kick off regression. We have Regression profile in pom.xml file. Profiles let's to have multiple build configurations. Also, regression profile runs RegressionRunner.java class. RegressionRunner class has list of features that were selected for regression.

<profiles>
        <profile>
            <id>Regression</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <version>3.0.0-M3</version>
                        <configuration>
                            <includes>
                                <include>**/RegressionRunner.java</include>
                            </includes>
                            <testFailureIgnore>true</testFailureIgnore>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

How about running tests in parallel?

Add this to maven-surefire configuration.

    <parallel>methods</parallel>
    <perCoreThreadCount>false</perCoreThreadCount>
    <threadCountMethods>2</threadCountMethods>



threadCountMethods - specify how many browsers will be running concurrently.

mvn clean - delete target folder
mvn clean test - delete target folder and run cucumber tests
mvn clean verify - delete target folder, run cucumber test, generate cucumber HTML report

mvn clean verify -P - delete target folder, run cucumber test, generate cucumber HTML report or whatever was specified in Regression profile.




 <profiles>
        <profile>
            <id>Regression</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <version>3.0.0-M3</version>
                        <configuration>

                            <parallel>methods</parallel>
                            <perCoreThreadCount>false</perCoreThreadCount>
                            <threadCountMethods>2</threadCountMethods>

                            <includes>
                                <include>**/RegressionRunner.java</include>
                            </includes>
                            <testFailureIgnore>true</testFailureIgnore>
                        </configuration>
                    </plugin>

                    <plugin>
                        <groupId>net.masterthought</groupId>
                        <artifactId>maven-cucumber-reporting</artifactId>
                        <version>4.9.0</version>
                        <executions>
                            <execution>
                                <id>execution</id>
                                <phase>verify</phase>
                                <goals>
                                    <goal>generate</goal>
                                </goals>
                                <configuration>
                                    <projectName>Cucumber HTML Reports</projectName>
                                    <outputDirectory>${project.build.directory}/regression</outputDirectory>
                                    <inputDirectory>${project.build.directory}</inputDirectory>
                                    <jsonFiles>
                                        <param>**/cucumber*.json</param>
                                    </jsonFiles>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

We can also run CucumberRunner classes in parallel, just put  <parallel>classes</parallel>
instead of  <parallel>methods</parallel>



 <threadCountMethods>2</threadCountMethods> - means 2 webdrivers will be created, 2 browsers will open, 2 tests will be running at the same time.

 private static ThreadLocal<WebDriver> driverPool = new ThreadLocal<>();


ThreadLocal class allows to create copy of webdriver object per thread at run time. If wouldn't use ThreadLocal, webdrivers would override each other.


Our configuration runs feature files in parallel.

package com.vytrack.runners;

import io.cucumber.junit.Cucumber;
import io.cucumber.junit.CucumberOptions;
import org.junit.runner.RunWith;

@RunWith(Cucumber.class)
@CucumberOptions(
        features = {
                "src/test/resources/features/activities",
                "src/test/resources/features/fleet"
        },
        glue = "com/vytrack/step_definitions",
        dryRun = false,
        plugin = {"html:target/default-cucumber-reports",
                "json:target/cucumber.json",
                "rerun:target/rerun.txt"
        }
)
public class RegressionRunner {

}
